"0","# Lista para comparação de modelos"
"0","modelos_garch <- list()"
"0","ics_modelos_garch  <- list()"
"0",""
"0","distribuicao_erro  <- c(""norm"", ""std"")"
"0",""
"0","# Loop pelos parâmetros de tipo de distribuição e m e n"
"0","for (distribuicao in distribuicao_erro) {"
"0","  for (m in 1:3) {"
"0","    for (n in 0:3) {"
"0",""
"0","      # Definir a fórmula do modelo com os parâmetros m e n atuais"
"0","      formula_garch <- paste0(""~garch("", m, "","", n, "")"")"
"0",""
"0","      # Ajustar o modelo GARCH"
"0","      modelo_atual <- garchFit(formula = as.formula(formula_garch), data = ret, trace = FALSE, "
"0","                               include.mean = TRUE, cond.dist = distribuicao)"
"0",""
"0","      # Armazenar o modelo ajustado na lista para visualização detalhada"
"0","      modelos_garch[[paste0(""garch_"", m, ""_"", n, ""_"", distribuicao)]] <- modelo_atual"
"0","      # Armazenar o modelo ajustado na lista para comparação dos critérios de informação"
"0","      ics_modelos_garch[[paste0(""garch_"", m, ""_"", n, ""_"", distribuicao)]] <- modelo_atual@fit$ics"
"0","    }"
"0","  }"
"0","}"
"2","Aviso em sqrt(diag(fit$cvar)) :"
"2"," NaNs produzidos
"
"2","Aviso em sqrt(diag(fit$cvar)) :"
"2"," NaNs produzidos
"
"2","Aviso em sqrt(diag(fit$cvar)) :"
"2"," NaNs produzidos
"
"2","Aviso em sqrt(diag(fit$cvar)) :"
"2"," NaNs produzidos
"
"2","Aviso em sqrt(diag(fit$cvar)) :"
"2"," NaNs produzidos
"
"0","# Formatando resultados para melhor visualização "
"0","resultados_tidy <- list()"
"0",""
"0","for (nome_modelo in names(ics_modelos_garch)) {"
"0","  valores <- ics_modelos_garch[[nome_modelo]]"
"0","  df <- data.frame("
"0","    Modelo = nome_modelo,"
"0","    AIC = valores[""AIC""],"
"0","    BIC = valores[""BIC""]"
"0","  )"
"0","  resultados_tidy[[nome_modelo]] <- df"
"0","}"
"0",""
"0","resultados_tidy_df <- do.call(rbind, resultados_tidy)"
"0",""
"0","# Selecionar o melhor modelo com base no menor AIC e BIC"
"0","melhor_modelo_aic <- resultados_tidy_df[which.min(resultados_tidy_df$AIC), ]"
"0","melhor_modelo_bic <- resultados_tidy_df[which.min(resultados_tidy_df$BIC), ]"
"0",""
"0","print(""Melhor modelo baseado no AIC:"")"
"1","[1]"
"1"," ""Melhor modelo baseado no AIC:"""
"1","
"
"0","print(melhor_modelo_aic)"
